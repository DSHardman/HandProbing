import kg_robot as kgr

urnie = kgr.kg_robot(port=30010, db_host="169.254.150.50")
urnie.set_tcp([0, 0.037898, 0.12552, 0, 0, 0])  # Tip of pincher


# Move from left to right
# urnie.movej([-4.23929, -1.69484, 2.50654, -4.00664, -2.11265, -1.59363], acc=0.5, vel=1.0)  # Leftmost
# urnie.movej([-4.37041, -1.80371, 2.13308, -3.52067, -1.97533, -1.58118], acc=0.5, vel=1.0)  # Upper
# urnie.movej([-4.37043, -1.80366, 2.13297, -3.52064, -1.97533, 1.55576], acc=2.0, vel=2.0)  # Perform rotation
# urnie.movej([-4.60221, -1.40817, 1.19664, -1.40745, -1.55043, 1.72113], acc=0.5, vel=2.0)  # To RHS
# urnie.movej([-4.64317, -0.774634, 0.634354, -0.201507, -1.4302, 1.60055], acc=0.5, vel=1.0)  # Rightmost

# Move from right to left
# urnie.movej([-4.64317, -0.774634, 0.634354, -0.201507, -1.4302, 1.60055], acc=0.5, vel=1.0)  # Rightmost
# urnie.movej([-4.60221, -1.40817, 1.19664, -1.40745, -1.55043, 1.72113], acc=0.5, vel=1.0)  # Upper vertical
# urnie.movej([-4.37043, -1.80366, 2.13297, -3.52064, -1.97533, 1.55576], acc=0.5, vel=2.0)  # To LHS
# urnie.movej([-4.37041, -1.80371, 2.13308, -3.52067, -1.97533, -1.58118], acc=2.0, vel=2.0)  # Perform rotation
# urnie.movej([-4.23929, -1.69484, 2.50654, -4.00664, -2.11265, -1.59363], acc=0.5, vel=1.0)  # Leftmost

# print(urnie.getl())
# print(urnie.getj())

# In left half:
# x = 145 is safe
# y=-0.342286, z=0.331992 is leftmost
# y=-0.419655, z=0.387524 is uppermost
# y=-0.419649, z=0.238907 is lowermost

# In right half:
# y=-0.521727, z=0.281632 is rightmost

# Boundary limits:
# y=-0.421944, z=0.332009
# y=-0.424178, z=0.257461

# x coordinate fixed at 145mm for tests below
# Leftmost point
# [0.144976, -0.342286, 0.331992, 1.13176, -1.19023, 1.18622]  # getl()
# [-4.23929, -1.69484, 2.50654, -4.00664, -2.11265, -1.59363]  # getj()

# Uppermost point
# [0.144974, -0.419655, 0.387524, 1.1317, -1.19035, 1.18605]  # getl()
# [-4.36931, -1.67504, 2.301, -3.81829, -1.98093, -1.58374]  # getj()

# Approximate lowermost point desired
# [0.145003, -0.419649, 0.238907, 1.13184, -1.19034, 1.18606]  # getl()
# [-4.36671, -1.27204, 2.45164, -4.37505, -1.98977, -1.59203]  # getj()

# LHS Limit
# [0.171562, -0.421944, 0.332009, 1.13169, -1.1903, 1.18621]
# [-4.37127, -1.54883, 2.37247, -4.017, -1.98154, -1.58592]

# Upper waypoint
# [0.144964, -0.419681, 0.481065, 1.13175, -1.19033, 1.18593]
# [-4.37041, -1.80371, 2.13308, -3.52067, -1.97533, -1.58118]

# Rotated wrist waypoint
# [0.220634, -0.424037, 0.480411, 1.20525, 1.15121, -1.28554]
# [-4.37043, -1.80366, 2.13297, -3.52064, -1.97533, 1.55576]

# Upper vertical waypoint
# [0.209883, -0.543065, 0.387282, 2.23607, 2.14703, -0.0424057]
# [-4.60221, -1.40817, 1.19664, -1.40745, -1.55043, 1.72113]

# Rightmost point (new x)
# [0.212164, -0.521727, 0.281632, -1.51757, -1.41541, -1.07531]
# [-4.64317, -0.774634, 0.634354, -0.201507, -1.4302, 1.60055]

# RHS limit
# [0.212181, -0.424178, 0.257461, -1.5178, -1.41538, -1.07516]
# [-4.63188, -1.06314, 1.17393, -0.453168, -1.41603, 1.60486]

urnie.close()
